<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="490" onload="init(evt)" viewBox="0 0 1200 490" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="490" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">./venv/bin/py-spy record -o /tmp/glances.svg -d 60 -s --pid 2569875</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="479.00"> </text><svg id="frames" x="10" width="1180"><g><title>update (glances/stats.py:225) (1 samples, 0.30%)</title><rect x="0.0000%" y="196" width="0.2976%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="206.50"></text></g><g><title>update (glances/plugins/glances_processlist.py:149) (1 samples, 0.30%)</title><rect x="0.2976%" y="212" width="0.2976%" height="15" fill="rgb(217,0,24)"/><text x="0.5476%" y="222.50"></text></g><g><title>update (glances/plugins/glances_amps.py:56) (1 samples, 0.30%)</title><rect x="0.5952%" y="244" width="0.2976%" height="15" fill="rgb(221,193,54)"/><text x="0.8452%" y="254.50"></text></g><g><title>refresh (glances/amps/glances_amp.py:137) (1 samples, 0.30%)</title><rect x="0.5952%" y="260" width="0.2976%" height="15" fill="rgb(248,212,6)"/><text x="0.8452%" y="270.50"></text></g><g><title>get (glances/amps/glances_amp.py:118) (1 samples, 0.30%)</title><rect x="0.5952%" y="276" width="0.2976%" height="15" fill="rgb(208,68,35)"/><text x="0.8452%" y="286.50"></text></g><g><title>update (glances/plugins/glances_diskio.py:89) (1 samples, 0.30%)</title><rect x="0.8929%" y="244" width="0.2976%" height="15" fill="rgb(232,128,0)"/><text x="1.1429%" y="254.50"></text></g><g><title>disk_io_counters (psutil/__init__.py:2059) (1 samples, 0.30%)</title><rect x="0.8929%" y="260" width="0.2976%" height="15" fill="rgb(207,160,47)"/><text x="1.1429%" y="270.50"></text></g><g><title>disk_io_counters (psutil/_pslinux.py:1166) (1 samples, 0.30%)</title><rect x="0.8929%" y="276" width="0.2976%" height="15" fill="rgb(228,23,34)"/><text x="1.1429%" y="286.50"></text></g><g><title>read_procfs (psutil/_pslinux.py:1118) (1 samples, 0.30%)</title><rect x="0.8929%" y="292" width="0.2976%" height="15" fill="rgb(218,30,26)"/><text x="1.1429%" y="302.50"></text></g><g><title>update (glances/plugins/glances_docker.py:186) (1 samples, 0.30%)</title><rect x="1.1905%" y="244" width="0.2976%" height="15" fill="rgb(220,122,19)"/><text x="1.4405%" y="254.50"></text></g><g><title>version (docker/client.py:207) (1 samples, 0.30%)</title><rect x="1.1905%" y="260" width="0.2976%" height="15" fill="rgb(250,228,42)"/><text x="1.4405%" y="270.50"></text></g><g><title>version (docker/api/daemon.py:181) (1 samples, 0.30%)</title><rect x="1.1905%" y="276" width="0.2976%" height="15" fill="rgb(240,193,28)"/><text x="1.4405%" y="286.50"></text></g><g><title>inner (docker/utils/decorators.py:46) (1 samples, 0.30%)</title><rect x="1.1905%" y="292" width="0.2976%" height="15" fill="rgb(216,20,37)"/><text x="1.4405%" y="302.50"></text></g><g><title>_get (docker/api/client.py:237) (1 samples, 0.30%)</title><rect x="1.1905%" y="308" width="0.2976%" height="15" fill="rgb(206,188,39)"/><text x="1.4405%" y="318.50"></text></g><g><title>get (requests/sessions.py:555) (1 samples, 0.30%)</title><rect x="1.1905%" y="324" width="0.2976%" height="15" fill="rgb(217,207,13)"/><text x="1.4405%" y="334.50"></text></g><g><title>request (requests/sessions.py:528) (1 samples, 0.30%)</title><rect x="1.1905%" y="340" width="0.2976%" height="15" fill="rgb(231,73,38)"/><text x="1.4405%" y="350.50"></text></g><g><title>prepare_request (requests/sessions.py:453) (1 samples, 0.30%)</title><rect x="1.1905%" y="356" width="0.2976%" height="15" fill="rgb(225,20,46)"/><text x="1.4405%" y="366.50"></text></g><g><title>get_netrc_auth (requests/utils.py:192) (1 samples, 0.30%)</title><rect x="1.1905%" y="372" width="0.2976%" height="15" fill="rgb(210,31,41)"/><text x="1.4405%" y="382.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.30%)</title><rect x="1.1905%" y="388" width="0.2976%" height="15" fill="rgb(221,200,47)"/><text x="1.4405%" y="398.50"></text></g><g><title>update (glances/plugins/glances_docker.py:200) (1 samples, 0.30%)</title><rect x="1.4881%" y="244" width="0.2976%" height="15" fill="rgb(226,26,5)"/><text x="1.7381%" y="254.50"></text></g><g><title>list (docker/models/containers.py:944) (1 samples, 0.30%)</title><rect x="1.4881%" y="260" width="0.2976%" height="15" fill="rgb(249,33,26)"/><text x="1.7381%" y="270.50"></text></g><g><title>containers (docker/api/container.py:211) (1 samples, 0.30%)</title><rect x="1.4881%" y="276" width="0.2976%" height="15" fill="rgb(235,183,28)"/><text x="1.7381%" y="286.50"></text></g><g><title>update (glances/plugins/glances_ip.py:80) (2 samples, 0.60%)</title><rect x="1.7857%" y="244" width="0.5952%" height="15" fill="rgb(221,5,38)"/><text x="2.0357%" y="254.50"></text></g><g><title>update (glances/plugins/glances_ip.py:85) (4 samples, 1.19%)</title><rect x="2.3810%" y="244" width="1.1905%" height="15" fill="rgb(247,18,42)"/><text x="2.6310%" y="254.50"></text></g><g><title>update (glances/plugins/glances_ip.py:86) (1 samples, 0.30%)</title><rect x="3.5714%" y="244" width="0.2976%" height="15" fill="rgb(241,131,45)"/><text x="3.8214%" y="254.50"></text></g><g><title>update (glances/plugins/glances_memswap.py:70) (1 samples, 0.30%)</title><rect x="3.8690%" y="244" width="0.2976%" height="15" fill="rgb(249,31,29)"/><text x="4.1190%" y="254.50"></text></g><g><title>swap_memory (psutil/__init__.py:1982) (1 samples, 0.30%)</title><rect x="3.8690%" y="260" width="0.2976%" height="15" fill="rgb(225,111,53)"/><text x="4.1190%" y="270.50"></text></g><g><title>swap_memory (psutil/_pslinux.py:542) (1 samples, 0.30%)</title><rect x="3.8690%" y="276" width="0.2976%" height="15" fill="rgb(238,160,17)"/><text x="4.1190%" y="286.50"></text></g><g><title>process_iter (psutil/__init__.py:1425) (2 samples, 0.60%)</title><rect x="4.4643%" y="292" width="0.5952%" height="15" fill="rgb(214,148,48)"/><text x="4.7143%" y="302.50"></text></g><g><title>pids (psutil/__init__.py:1365) (2 samples, 0.60%)</title><rect x="4.4643%" y="308" width="0.5952%" height="15" fill="rgb(232,36,49)"/><text x="4.7143%" y="318.50"></text></g><g><title>pids (psutil/_pslinux.py:1512) (2 samples, 0.60%)</title><rect x="4.4643%" y="324" width="0.5952%" height="15" fill="rgb(209,103,24)"/><text x="4.7143%" y="334.50"></text></g><g><title>&lt;listcomp&gt; (psutil/_pslinux.py:1512) (1 samples, 0.30%)</title><rect x="4.7619%" y="340" width="0.2976%" height="15" fill="rgb(229,88,8)"/><text x="5.0119%" y="350.50"></text></g><g><title>__eq__ (psutil/__init__.py:410) (1 samples, 0.30%)</title><rect x="5.0595%" y="324" width="0.2976%" height="15" fill="rgb(213,181,19)"/><text x="5.3095%" y="334.50"></text></g><g><title>__init__ (psutil/_pslinux.py:1598) (2 samples, 0.60%)</title><rect x="5.6548%" y="356" width="0.5952%" height="15" fill="rgb(254,191,54)"/><text x="5.9048%" y="366.50"></text></g><g><title>_init (psutil/__init__.py:348) (4 samples, 1.19%)</title><rect x="5.6548%" y="340" width="1.1905%" height="15" fill="rgb(241,83,37)"/><text x="5.9048%" y="350.50"></text></g><g><title>__init__ (psutil/_pslinux.py:1599) (2 samples, 0.60%)</title><rect x="6.2500%" y="356" width="0.5952%" height="15" fill="rgb(233,36,39)"/><text x="6.5000%" y="366.50"></text></g><g><title>get_procfs_path (psutil/_common.py:750) (1 samples, 0.30%)</title><rect x="6.5476%" y="372" width="0.2976%" height="15" fill="rgb(226,3,54)"/><text x="6.7976%" y="382.50"></text></g><g><title>_parse_stat_file (psutil/_pslinux.py:1618) (4 samples, 1.19%)</title><rect x="7.7381%" y="436" width="1.1905%" height="15" fill="rgb(245,192,40)"/><text x="7.9881%" y="446.50"></text></g><g><title>open_binary (psutil/_common.py:711) (4 samples, 1.19%)</title><rect x="7.7381%" y="452" width="1.1905%" height="15" fill="rgb(238,167,29)"/><text x="7.9881%" y="462.50"></text></g><g><title>_parse_stat_file (psutil/_pslinux.py:1619) (11 samples, 3.27%)</title><rect x="8.9286%" y="436" width="3.2738%" height="15" fill="rgb(232,182,51)"/><text x="9.1786%" y="446.50">_pa..</text></g><g><title>process_iter (psutil/__init__.py:1443) (25 samples, 7.44%)</title><rect x="5.0595%" y="292" width="7.4405%" height="15" fill="rgb(231,60,39)"/><text x="5.3095%" y="302.50">process_it..</text></g><g><title>is_running (psutil/__init__.py:581) (25 samples, 7.44%)</title><rect x="5.0595%" y="308" width="7.4405%" height="15" fill="rgb(208,69,12)"/><text x="5.3095%" y="318.50">is_running..</text></g><g><title>__init__ (psutil/__init__.py:326) (24 samples, 7.14%)</title><rect x="5.3571%" y="324" width="7.1429%" height="15" fill="rgb(235,93,37)"/><text x="5.6071%" y="334.50">__init__ (..</text></g><g><title>_init (psutil/__init__.py:354) (19 samples, 5.65%)</title><rect x="6.8452%" y="340" width="5.6548%" height="15" fill="rgb(213,116,39)"/><text x="7.0952%" y="350.50">_init (..</text></g><g><title>create_time (psutil/__init__.py:710) (18 samples, 5.36%)</title><rect x="7.1429%" y="356" width="5.3571%" height="15" fill="rgb(222,207,29)"/><text x="7.3929%" y="366.50">create_..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (18 samples, 5.36%)</title><rect x="7.1429%" y="372" width="5.3571%" height="15" fill="rgb(206,96,30)"/><text x="7.3929%" y="382.50">wrapper..</text></g><g><title>create_time (psutil/_pslinux.py:1788) (18 samples, 5.36%)</title><rect x="7.1429%" y="388" width="5.3571%" height="15" fill="rgb(218,138,4)"/><text x="7.3929%" y="398.50">create_..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (17 samples, 5.06%)</title><rect x="7.4405%" y="404" width="5.0595%" height="15" fill="rgb(250,191,14)"/><text x="7.6905%" y="414.50">wrappe..</text></g><g><title>wrapper (psutil/_common.py:450) (17 samples, 5.06%)</title><rect x="7.4405%" y="420" width="5.0595%" height="15" fill="rgb(239,60,40)"/><text x="7.6905%" y="430.50">wrappe..</text></g><g><title>_parse_stat_file (psutil/_pslinux.py:1625) (1 samples, 0.30%)</title><rect x="12.2024%" y="436" width="0.2976%" height="15" fill="rgb(206,27,48)"/><text x="12.4524%" y="446.50"></text></g><g><title>as_dict (psutil/__init__.py:518) (3 samples, 0.89%)</title><rect x="12.5000%" y="308" width="0.8929%" height="15" fill="rgb(225,35,8)"/><text x="12.7500%" y="318.50"></text></g><g><title>__enter__ (contextlib.py:113) (3 samples, 0.89%)</title><rect x="12.5000%" y="324" width="0.8929%" height="15" fill="rgb(250,213,24)"/><text x="12.7500%" y="334.50"></text></g><g><title>oneshot (psutil/__init__.py:484) (2 samples, 0.60%)</title><rect x="12.7976%" y="340" width="0.5952%" height="15" fill="rgb(247,123,22)"/><text x="13.0476%" y="350.50"></text></g><g><title>oneshot_enter (psutil/_pslinux.py:1660) (2 samples, 0.60%)</title><rect x="12.7976%" y="356" width="0.5952%" height="15" fill="rgb(231,138,38)"/><text x="13.0476%" y="366.50"></text></g><g><title>cache_activate (psutil/_common.py:460) (1 samples, 0.30%)</title><rect x="13.0952%" y="372" width="0.2976%" height="15" fill="rgb(231,145,46)"/><text x="13.3452%" y="382.50"></text></g><g><title>as_dict (psutil/__init__.py:521) (1 samples, 0.30%)</title><rect x="13.3929%" y="308" width="0.2976%" height="15" fill="rgb(251,118,11)"/><text x="13.6429%" y="318.50"></text></g><g><title>as_dict (psutil/__init__.py:524) (1 samples, 0.30%)</title><rect x="13.6905%" y="308" width="0.2976%" height="15" fill="rgb(217,147,25)"/><text x="13.9405%" y="318.50"></text></g><g><title>cmdline (psutil/__init__.py:677) (1 samples, 0.30%)</title><rect x="15.4762%" y="324" width="0.2976%" height="15" fill="rgb(247,81,37)"/><text x="15.7262%" y="334.50"></text></g><g><title>wrapper (psutil/_pslinux.py:1576) (1 samples, 0.30%)</title><rect x="15.4762%" y="340" width="0.2976%" height="15" fill="rgb(209,12,38)"/><text x="15.7262%" y="350.50"></text></g><g><title>cmdline (psutil/_pslinux.py:1696) (1 samples, 0.30%)</title><rect x="15.4762%" y="356" width="0.2976%" height="15" fill="rgb(227,1,9)"/><text x="15.7262%" y="366.50"></text></g><g><title>open_text (psutil/_common.py:725) (1 samples, 0.30%)</title><rect x="15.4762%" y="372" width="0.2976%" height="15" fill="rgb(248,47,43)"/><text x="15.7262%" y="382.50"></text></g><g><title>cpu_percent (psutil/__init__.py:1001) (1 samples, 0.30%)</title><rect x="15.7738%" y="324" width="0.2976%" height="15" fill="rgb(221,10,30)"/><text x="16.0238%" y="334.50"></text></g><g><title>cpu_count (psutil/__init__.py:1576) (3 samples, 0.89%)</title><rect x="16.0714%" y="340" width="0.8929%" height="15" fill="rgb(210,229,1)"/><text x="16.3214%" y="350.50"></text></g><g><title>cpu_count_logical (psutil/_pslinux.py:633) (2 samples, 0.60%)</title><rect x="16.3690%" y="356" width="0.5952%" height="15" fill="rgb(222,148,37)"/><text x="16.6190%" y="366.50"></text></g><g><title>cpu_percent (psutil/__init__.py:980) (4 samples, 1.19%)</title><rect x="16.0714%" y="324" width="1.1905%" height="15" fill="rgb(234,67,33)"/><text x="16.3214%" y="334.50"></text></g><g><title>cpu_count (psutil/__init__.py:1579) (1 samples, 0.30%)</title><rect x="16.9643%" y="340" width="0.2976%" height="15" fill="rgb(247,98,35)"/><text x="17.2143%" y="350.50"></text></g><g><title>cpu_times (psutil/_pslinux.py:1770) (1 samples, 0.30%)</title><rect x="17.2619%" y="356" width="0.2976%" height="15" fill="rgb(247,138,52)"/><text x="17.5119%" y="366.50"></text></g><g><title>cpu_times (psutil/_pslinux.py:1773) (1 samples, 0.30%)</title><rect x="17.5595%" y="356" width="0.2976%" height="15" fill="rgb(213,79,30)"/><text x="17.8095%" y="366.50"></text></g><g><title>cpu_percent (psutil/__init__.py:995) (3 samples, 0.89%)</title><rect x="17.2619%" y="324" width="0.8929%" height="15" fill="rgb(246,177,23)"/><text x="17.5119%" y="334.50"></text></g><g><title>wrapper (psutil/_pslinux.py:1576) (3 samples, 0.89%)</title><rect x="17.2619%" y="340" width="0.8929%" height="15" fill="rgb(230,62,27)"/><text x="17.5119%" y="350.50"></text></g><g><title>cpu_times (psutil/_pslinux.py:1775) (1 samples, 0.30%)</title><rect x="17.8571%" y="356" width="0.2976%" height="15" fill="rgb(216,154,8)"/><text x="18.1071%" y="366.50"></text></g><g><title>__new__ (&lt;string&gt;:1) (1 samples, 0.30%)</title><rect x="17.8571%" y="372" width="0.2976%" height="15" fill="rgb(244,35,45)"/><text x="18.1071%" y="382.50"></text></g><g><title>wrapper (psutil/_common.py:448) (1 samples, 0.30%)</title><rect x="18.1548%" y="388" width="0.2976%" height="15" fill="rgb(251,115,12)"/><text x="18.4048%" y="398.50"></text></g><g><title>_read_status_file (psutil/_pslinux.py:1649) (8 samples, 2.38%)</title><rect x="18.4524%" y="404" width="2.3810%" height="15" fill="rgb(240,54,50)"/><text x="18.7024%" y="414.50">_r..</text></g><g><title>open_binary (psutil/_common.py:711) (7 samples, 2.08%)</title><rect x="18.7500%" y="420" width="2.0833%" height="15" fill="rgb(233,84,52)"/><text x="19.0000%" y="430.50">o..</text></g><g><title>gids (psutil/_pslinux.py:2152) (16 samples, 4.76%)</title><rect x="18.1548%" y="356" width="4.7619%" height="15" fill="rgb(207,117,47)"/><text x="18.4048%" y="366.50">gids (..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (16 samples, 4.76%)</title><rect x="18.1548%" y="372" width="4.7619%" height="15" fill="rgb(249,43,39)"/><text x="18.4048%" y="382.50">wrappe..</text></g><g><title>wrapper (psutil/_common.py:454) (15 samples, 4.46%)</title><rect x="18.4524%" y="388" width="4.4643%" height="15" fill="rgb(209,38,44)"/><text x="18.7024%" y="398.50">wrapp..</text></g><g><title>_read_status_file (psutil/_pslinux.py:1650) (7 samples, 2.08%)</title><rect x="20.8333%" y="404" width="2.0833%" height="15" fill="rgb(236,212,23)"/><text x="21.0833%" y="414.50">_..</text></g><g><title>gids (psutil/__init__.py:739) (19 samples, 5.65%)</title><rect x="18.1548%" y="324" width="5.6548%" height="15" fill="rgb(242,79,21)"/><text x="18.4048%" y="334.50">gids (p..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (19 samples, 5.65%)</title><rect x="18.1548%" y="340" width="5.6548%" height="15" fill="rgb(211,96,35)"/><text x="18.4048%" y="350.50">wrapper..</text></g><g><title>gids (psutil/_pslinux.py:2154) (3 samples, 0.89%)</title><rect x="22.9167%" y="356" width="0.8929%" height="15" fill="rgb(253,215,40)"/><text x="23.1667%" y="366.50"></text></g><g><title>io_counters (psutil/_pslinux.py:1740) (7 samples, 2.08%)</title><rect x="23.8095%" y="356" width="2.0833%" height="15" fill="rgb(211,81,21)"/><text x="24.0595%" y="366.50">i..</text></g><g><title>open_binary (psutil/_common.py:711) (7 samples, 2.08%)</title><rect x="23.8095%" y="372" width="2.0833%" height="15" fill="rgb(208,190,38)"/><text x="24.0595%" y="382.50">o..</text></g><g><title>io_counters (psutil/_pslinux.py:1741) (1 samples, 0.30%)</title><rect x="25.8929%" y="356" width="0.2976%" height="15" fill="rgb(235,213,38)"/><text x="26.1429%" y="366.50"></text></g><g><title>io_counters (psutil/_pslinux.py:1743) (2 samples, 0.60%)</title><rect x="26.1905%" y="356" width="0.5952%" height="15" fill="rgb(237,122,38)"/><text x="26.4405%" y="366.50"></text></g><g><title>wrapper (psutil/_pslinux.py:1576) (11 samples, 3.27%)</title><rect x="23.8095%" y="340" width="3.2738%" height="15" fill="rgb(244,218,35)"/><text x="24.0595%" y="350.50">wra..</text></g><g><title>io_counters (psutil/_pslinux.py:1751) (1 samples, 0.30%)</title><rect x="26.7857%" y="356" width="0.2976%" height="15" fill="rgb(240,68,47)"/><text x="27.0357%" y="366.50"></text></g><g><title>io_counters (psutil/__init__.py:763) (12 samples, 3.57%)</title><rect x="23.8095%" y="324" width="3.5714%" height="15" fill="rgb(210,16,53)"/><text x="24.0595%" y="334.50">io_c..</text></g><g><title>wrapper (psutil/_pslinux.py:1578) (1 samples, 0.30%)</title><rect x="27.0833%" y="340" width="0.2976%" height="15" fill="rgb(235,124,12)"/><text x="27.3333%" y="350.50"></text></g><g><title>__init__ (psutil/_common.py:339) (1 samples, 0.30%)</title><rect x="27.0833%" y="356" width="0.2976%" height="15" fill="rgb(224,169,11)"/><text x="27.3333%" y="366.50"></text></g><g><title>memory_percent (psutil/__init__.py:1097) (1 samples, 0.30%)</title><rect x="27.3810%" y="324" width="0.2976%" height="15" fill="rgb(250,166,2)"/><text x="27.6310%" y="334.50"></text></g><g><title>name (psutil/_pslinux.py:1671) (1 samples, 0.30%)</title><rect x="27.6786%" y="356" width="0.2976%" height="15" fill="rgb(242,216,29)"/><text x="27.9286%" y="366.50"></text></g><g><title>wrapper (psutil/_pslinux.py:1576) (1 samples, 0.30%)</title><rect x="27.6786%" y="372" width="0.2976%" height="15" fill="rgb(230,116,27)"/><text x="27.9286%" y="382.50"></text></g><g><title>name (psutil/__init__.py:617) (2 samples, 0.60%)</title><rect x="27.6786%" y="324" width="0.5952%" height="15" fill="rgb(228,99,48)"/><text x="27.9286%" y="334.50"></text></g><g><title>wrapper (psutil/_pslinux.py:1576) (2 samples, 0.60%)</title><rect x="27.6786%" y="340" width="0.5952%" height="15" fill="rgb(253,11,6)"/><text x="27.9286%" y="350.50"></text></g><g><title>name (psutil/_pslinux.py:1673) (1 samples, 0.30%)</title><rect x="27.9762%" y="356" width="0.2976%" height="15" fill="rgb(247,143,39)"/><text x="28.2262%" y="366.50"></text></g><g><title>decode (psutil/_common.py:755) (1 samples, 0.30%)</title><rect x="27.9762%" y="372" width="0.2976%" height="15" fill="rgb(236,97,10)"/><text x="28.2262%" y="382.50"></text></g><g><title>cmdline (psutil/_pslinux.py:1696) (2 samples, 0.60%)</title><rect x="28.5714%" y="372" width="0.5952%" height="15" fill="rgb(233,208,19)"/><text x="28.8214%" y="382.50"></text></g><g><title>open_text (psutil/_common.py:725) (2 samples, 0.60%)</title><rect x="28.5714%" y="388" width="0.5952%" height="15" fill="rgb(216,164,2)"/><text x="28.8214%" y="398.50"></text></g><g><title>name (psutil/__init__.py:624) (9 samples, 2.68%)</title><rect x="28.2738%" y="324" width="2.6786%" height="15" fill="rgb(220,129,5)"/><text x="28.5238%" y="334.50">na..</text></g><g><title>cmdline (psutil/__init__.py:677) (9 samples, 2.68%)</title><rect x="28.2738%" y="340" width="2.6786%" height="15" fill="rgb(242,17,10)"/><text x="28.5238%" y="350.50">cm..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (9 samples, 2.68%)</title><rect x="28.2738%" y="356" width="2.6786%" height="15" fill="rgb(242,107,0)"/><text x="28.5238%" y="366.50">wr..</text></g><g><title>cmdline (psutil/_pslinux.py:1697) (6 samples, 1.79%)</title><rect x="29.1667%" y="372" width="1.7857%" height="15" fill="rgb(251,28,31)"/><text x="29.4167%" y="382.50">c..</text></g><g><title>nice (psutil/__init__.py:720) (3 samples, 0.89%)</title><rect x="30.9524%" y="324" width="0.8929%" height="15" fill="rgb(233,223,10)"/><text x="31.2024%" y="334.50"></text></g><g><title>wrapper (psutil/_pslinux.py:1576) (3 samples, 0.89%)</title><rect x="30.9524%" y="340" width="0.8929%" height="15" fill="rgb(215,21,27)"/><text x="31.2024%" y="350.50"></text></g><g><title>nice_get (psutil/_pslinux.py:1988) (3 samples, 0.89%)</title><rect x="30.9524%" y="356" width="0.8929%" height="15" fill="rgb(232,23,21)"/><text x="31.2024%" y="366.50"></text></g><g><title>num_threads (psutil/__init__.py:860) (4 samples, 1.19%)</title><rect x="31.8452%" y="324" width="1.1905%" height="15" fill="rgb(244,5,23)"/><text x="32.0952%" y="334.50"></text></g><g><title>wrapper (psutil/_pslinux.py:1576) (4 samples, 1.19%)</title><rect x="31.8452%" y="340" width="1.1905%" height="15" fill="rgb(226,81,46)"/><text x="32.0952%" y="350.50"></text></g><g><title>num_threads (psutil/_pslinux.py:1951) (4 samples, 1.19%)</title><rect x="31.8452%" y="356" width="1.1905%" height="15" fill="rgb(247,70,30)"/><text x="32.0952%" y="366.50"></text></g><g><title>status (psutil/_pslinux.py:2080) (1 samples, 0.30%)</title><rect x="33.0357%" y="356" width="0.2976%" height="15" fill="rgb(212,68,19)"/><text x="33.2857%" y="366.50"></text></g><g><title>status (psutil/__init__.py:682) (2 samples, 0.60%)</title><rect x="33.0357%" y="324" width="0.5952%" height="15" fill="rgb(240,187,13)"/><text x="33.2857%" y="334.50"></text></g><g><title>wrapper (psutil/_pslinux.py:1576) (2 samples, 0.60%)</title><rect x="33.0357%" y="340" width="0.5952%" height="15" fill="rgb(223,113,26)"/><text x="33.2857%" y="350.50"></text></g><g><title>status (psutil/_pslinux.py:2084) (1 samples, 0.30%)</title><rect x="33.3333%" y="356" width="0.2976%" height="15" fill="rgb(206,192,2)"/><text x="33.5833%" y="366.50"></text></g><g><title>username (psutil/__init__.py:695) (1 samples, 0.30%)</title><rect x="33.6310%" y="324" width="0.2976%" height="15" fill="rgb(241,108,4)"/><text x="33.8810%" y="334.50"></text></g><g><title>wrapper (psutil/_common.py:454) (1 samples, 0.30%)</title><rect x="33.6310%" y="340" width="0.2976%" height="15" fill="rgb(247,173,49)"/><text x="33.8810%" y="350.50"></text></g><g><title>uids (psutil/__init__.py:733) (1 samples, 0.30%)</title><rect x="33.6310%" y="356" width="0.2976%" height="15" fill="rgb(224,114,35)"/><text x="33.8810%" y="366.50"></text></g><g><title>wrapper (psutil/_pslinux.py:1576) (1 samples, 0.30%)</title><rect x="33.6310%" y="372" width="0.2976%" height="15" fill="rgb(245,159,27)"/><text x="33.8810%" y="382.50"></text></g><g><title>uids (psutil/_pslinux.py:2148) (1 samples, 0.30%)</title><rect x="33.6310%" y="388" width="0.2976%" height="15" fill="rgb(245,172,44)"/><text x="33.8810%" y="398.50"></text></g><g><title>wrapper (psutil/_common.py:451) (1 samples, 0.30%)</title><rect x="34.5238%" y="404" width="0.2976%" height="15" fill="rgb(236,23,11)"/><text x="34.7738%" y="414.50"></text></g><g><title>_parse_stat_file (psutil/_pslinux.py:1618) (5 samples, 1.49%)</title><rect x="34.8214%" y="420" width="1.4881%" height="15" fill="rgb(205,117,38)"/><text x="35.0714%" y="430.50"></text></g><g><title>open_binary (psutil/_common.py:711) (5 samples, 1.49%)</title><rect x="34.8214%" y="436" width="1.4881%" height="15" fill="rgb(237,72,25)"/><text x="35.0714%" y="446.50"></text></g><g><title>_parse_stat_file (psutil/_pslinux.py:1619) (5 samples, 1.49%)</title><rect x="36.3095%" y="420" width="1.4881%" height="15" fill="rgb(244,70,9)"/><text x="36.5595%" y="430.50"></text></g><g><title>cpu_times (psutil/_pslinux.py:1769) (13 samples, 3.87%)</title><rect x="34.2262%" y="372" width="3.8690%" height="15" fill="rgb(217,125,39)"/><text x="34.4762%" y="382.50">cpu_..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (12 samples, 3.57%)</title><rect x="34.5238%" y="388" width="3.5714%" height="15" fill="rgb(235,36,10)"/><text x="34.7738%" y="398.50">wrap..</text></g><g><title>wrapper (psutil/_common.py:454) (11 samples, 3.27%)</title><rect x="34.8214%" y="404" width="3.2738%" height="15" fill="rgb(251,123,47)"/><text x="35.0714%" y="414.50">wra..</text></g><g><title>_parse_stat_file (psutil/_pslinux.py:1624) (1 samples, 0.30%)</title><rect x="37.7976%" y="420" width="0.2976%" height="15" fill="rgb(221,13,13)"/><text x="38.0476%" y="430.50"></text></g><g><title>cpu_times (psutil/__init__.py:1043) (14 samples, 4.17%)</title><rect x="34.2262%" y="340" width="4.1667%" height="15" fill="rgb(238,131,9)"/><text x="34.4762%" y="350.50">cpu_t..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (14 samples, 4.17%)</title><rect x="34.2262%" y="356" width="4.1667%" height="15" fill="rgb(211,50,8)"/><text x="34.4762%" y="366.50">wrapp..</text></g><g><title>cpu_times (psutil/_pslinux.py:1775) (1 samples, 0.30%)</title><rect x="38.0952%" y="372" width="0.2976%" height="15" fill="rgb(245,182,24)"/><text x="38.3452%" y="382.50"></text></g><g><title>__new__ (&lt;string&gt;:1) (1 samples, 0.30%)</title><rect x="38.0952%" y="388" width="0.2976%" height="15" fill="rgb(242,14,37)"/><text x="38.3452%" y="398.50"></text></g><g><title>memory_info (psutil/_pslinux.py:1810) (5 samples, 1.49%)</title><rect x="38.6905%" y="372" width="1.4881%" height="15" fill="rgb(246,228,12)"/><text x="38.9405%" y="382.50"></text></g><g><title>open_binary (psutil/_common.py:711) (5 samples, 1.49%)</title><rect x="38.6905%" y="388" width="1.4881%" height="15" fill="rgb(213,55,15)"/><text x="38.9405%" y="398.50"></text></g><g><title>memory_info (psutil/_pslinux.py:1811) (2 samples, 0.60%)</title><rect x="40.1786%" y="372" width="0.5952%" height="15" fill="rgb(209,9,3)"/><text x="40.4286%" y="382.50"></text></g><g><title>memory_info (psutil/_pslinux.py:1812) (7 samples, 2.08%)</title><rect x="40.7738%" y="372" width="2.0833%" height="15" fill="rgb(230,59,30)"/><text x="41.0238%" y="382.50">m..</text></g><g><title>&lt;listcomp&gt; (psutil/_pslinux.py:1812) (4 samples, 1.19%)</title><rect x="41.6667%" y="388" width="1.1905%" height="15" fill="rgb(209,121,21)"/><text x="41.9167%" y="398.50"></text></g><g><title>as_dict (psutil/__init__.py:525) (98 samples, 29.17%)</title><rect x="13.9881%" y="308" width="29.1667%" height="15" fill="rgb(220,109,13)"/><text x="14.2381%" y="318.50">as_dict (psutil/__init__.py:525)</text></g><g><title>wrapper (psutil/_common.py:454) (31 samples, 9.23%)</title><rect x="33.9286%" y="324" width="9.2262%" height="15" fill="rgb(232,18,1)"/><text x="34.1786%" y="334.50">wrapper (psut..</text></g><g><title>memory_info (psutil/__init__.py:1054) (16 samples, 4.76%)</title><rect x="38.3929%" y="340" width="4.7619%" height="15" fill="rgb(215,41,42)"/><text x="38.6429%" y="350.50">memory..</text></g><g><title>wrapper (psutil/_pslinux.py:1576) (15 samples, 4.46%)</title><rect x="38.6905%" y="356" width="4.4643%" height="15" fill="rgb(224,123,36)"/><text x="38.9405%" y="366.50">wrapp..</text></g><g><title>memory_info (psutil/_pslinux.py:1813) (1 samples, 0.30%)</title><rect x="42.8571%" y="372" width="0.2976%" height="15" fill="rgb(240,125,3)"/><text x="43.1071%" y="382.50"></text></g><g><title>__new__ (&lt;string&gt;:1) (1 samples, 0.30%)</title><rect x="42.8571%" y="388" width="0.2976%" height="15" fill="rgb(205,98,50)"/><text x="43.1071%" y="398.50"></text></g><g><title>&lt;listcomp&gt; (glances/processes.py:286) (135 samples, 40.18%)</title><rect x="4.1667%" y="276" width="40.1786%" height="15" fill="rgb(205,185,37)"/><text x="4.4167%" y="286.50">&lt;listcomp&gt; (glances/processes.py:286)</text></g><g><title>process_iter (psutil/__init__.py:1445) (107 samples, 31.85%)</title><rect x="12.5000%" y="292" width="31.8452%" height="15" fill="rgb(238,207,15)"/><text x="12.7500%" y="302.50">process_iter (psutil/__init__.py:1445)</text></g><g><title>as_dict (psutil/__init__.py:535) (4 samples, 1.19%)</title><rect x="43.1548%" y="308" width="1.1905%" height="15" fill="rgb(213,199,42)"/><text x="43.4048%" y="318.50"></text></g><g><title>__exit__ (contextlib.py:120) (2 samples, 0.60%)</title><rect x="43.7500%" y="324" width="0.5952%" height="15" fill="rgb(235,201,11)"/><text x="44.0000%" y="334.50"></text></g><g><title>oneshot (psutil/__init__.py:487) (1 samples, 0.30%)</title><rect x="44.0476%" y="340" width="0.2976%" height="15" fill="rgb(207,46,11)"/><text x="44.2976%" y="350.50"></text></g><g><title>update (glances/processes.py:286) (136 samples, 40.48%)</title><rect x="4.1667%" y="260" width="40.4762%" height="15" fill="rgb(241,35,35)"/><text x="4.4167%" y="270.50">update (glances/processes.py:286)</text></g><g><title>&lt;listcomp&gt; (glances/processes.py:294) (1 samples, 0.30%)</title><rect x="44.3452%" y="276" width="0.2976%" height="15" fill="rgb(243,32,47)"/><text x="44.5952%" y="286.50"></text></g><g><title>update (glances/plugins/glances_processcount.py:75) (137 samples, 40.77%)</title><rect x="4.1667%" y="244" width="40.7738%" height="15" fill="rgb(247,202,23)"/><text x="4.4167%" y="254.50">update (glances/plugins/glances_processcount.py:75)</text></g><g><title>update (glances/processes.py:302) (1 samples, 0.30%)</title><rect x="44.6429%" y="260" width="0.2976%" height="15" fill="rgb(219,102,11)"/><text x="44.8929%" y="270.50"></text></g><g><title>update_processcount (glances/processes.py:123) (1 samples, 0.30%)</title><rect x="44.6429%" y="276" width="0.2976%" height="15" fill="rgb(243,110,44)"/><text x="44.8929%" y="286.50"></text></g><g><title>cpu_freq (psutil/_pslinux.py:737) (4 samples, 1.19%)</title><rect x="44.9405%" y="292" width="1.1905%" height="15" fill="rgb(222,74,54)"/><text x="45.1905%" y="302.50"></text></g><g><title>get_path (psutil/_pslinux.py:732) (4 samples, 1.19%)</title><rect x="44.9405%" y="308" width="1.1905%" height="15" fill="rgb(216,99,12)"/><text x="45.1905%" y="318.50"></text></g><g><title>exists (genericpath.py:19) (4 samples, 1.19%)</title><rect x="44.9405%" y="324" width="1.1905%" height="15" fill="rgb(226,22,26)"/><text x="45.1905%" y="334.50"></text></g><g><title>cpu_freq (psutil/_pslinux.py:742) (1 samples, 0.30%)</title><rect x="46.1310%" y="292" width="0.2976%" height="15" fill="rgb(217,163,10)"/><text x="46.3810%" y="302.50"></text></g><g><title>cat (psutil/_pslinux.py:292) (1 samples, 0.30%)</title><rect x="46.1310%" y="308" width="0.2976%" height="15" fill="rgb(213,25,53)"/><text x="46.3810%" y="318.50"></text></g><g><title>open_binary (psutil/_common.py:711) (1 samples, 0.30%)</title><rect x="46.1310%" y="324" width="0.2976%" height="15" fill="rgb(252,105,26)"/><text x="46.3810%" y="334.50"></text></g><g><title>cat (psutil/_pslinux.py:292) (6 samples, 1.79%)</title><rect x="47.6190%" y="308" width="1.7857%" height="15" fill="rgb(220,39,43)"/><text x="47.8690%" y="318.50">c..</text></g><g><title>open_binary (psutil/_common.py:711) (6 samples, 1.79%)</title><rect x="47.6190%" y="324" width="1.7857%" height="15" fill="rgb(229,68,48)"/><text x="47.8690%" y="334.50">o..</text></g><g><title>cpu_freq (psutil/_pslinux.py:751) (22 samples, 6.55%)</title><rect x="46.4286%" y="292" width="6.5476%" height="15" fill="rgb(252,8,32)"/><text x="46.6786%" y="302.50">cpu_freq ..</text></g><g><title>cat (psutil/_pslinux.py:293) (12 samples, 3.57%)</title><rect x="49.4048%" y="308" width="3.5714%" height="15" fill="rgb(223,20,43)"/><text x="49.6548%" y="318.50">cat ..</text></g><g><title>cat (psutil/_pslinux.py:292) (2 samples, 0.60%)</title><rect x="52.9762%" y="308" width="0.5952%" height="15" fill="rgb(229,81,49)"/><text x="53.2262%" y="318.50"></text></g><g><title>open_binary (psutil/_common.py:711) (2 samples, 0.60%)</title><rect x="52.9762%" y="324" width="0.5952%" height="15" fill="rgb(236,28,36)"/><text x="53.2262%" y="334.50"></text></g><g><title>join (posixpath.py:76) (1 samples, 0.30%)</title><rect x="53.5714%" y="308" width="0.2976%" height="15" fill="rgb(249,185,26)"/><text x="53.8214%" y="318.50"></text></g><g><title>cpu_freq (psutil/__init__.py:1859) (31 samples, 9.23%)</title><rect x="44.9405%" y="276" width="9.2262%" height="15" fill="rgb(249,174,33)"/><text x="45.1905%" y="286.50">cpu_freq (psu..</text></g><g><title>cpu_freq (psutil/_pslinux.py:752) (4 samples, 1.19%)</title><rect x="52.9762%" y="292" width="1.1905%" height="15" fill="rgb(233,201,37)"/><text x="53.2262%" y="302.50"></text></g><g><title>join (posixpath.py:80) (1 samples, 0.30%)</title><rect x="53.8690%" y="308" width="0.2976%" height="15" fill="rgb(221,78,26)"/><text x="54.1190%" y="318.50"></text></g><g><title>get_info (glances/cpu_percent.py:68) (32 samples, 9.52%)</title><rect x="44.9405%" y="260" width="9.5238%" height="15" fill="rgb(250,127,30)"/><text x="45.1905%" y="270.50">get_info (glan..</text></g><g><title>cpu_freq (psutil/__init__.py:1887) (1 samples, 0.30%)</title><rect x="54.1667%" y="276" width="0.2976%" height="15" fill="rgb(230,49,44)"/><text x="54.4167%" y="286.50"></text></g><g><title>update (glances/plugins/glances_quicklook.py:83) (33 samples, 9.82%)</title><rect x="44.9405%" y="244" width="9.8214%" height="15" fill="rgb(229,67,23)"/><text x="45.1905%" y="254.50">update (glance..</text></g><g><title>get_info (glances/cpu_percent.py:72) (1 samples, 0.30%)</title><rect x="54.4643%" y="260" width="0.2976%" height="15" fill="rgb(249,83,47)"/><text x="54.7143%" y="270.50"></text></g><g><title>reset (glances/timer.py:56) (1 samples, 0.30%)</title><rect x="54.4643%" y="276" width="0.2976%" height="15" fill="rgb(215,43,3)"/><text x="54.7143%" y="286.50"></text></g><g><title>update (glances/plugins/glances_quicklook.py:84) (2 samples, 0.60%)</title><rect x="54.7619%" y="244" width="0.5952%" height="15" fill="rgb(238,154,13)"/><text x="55.0119%" y="254.50"></text></g><g><title>get_info (glances/cpu_percent.py:66) (1 samples, 0.30%)</title><rect x="55.0595%" y="260" width="0.2976%" height="15" fill="rgb(219,56,2)"/><text x="55.3095%" y="270.50"></text></g><g><title>sensors_temperatures (psutil/_pslinux.py:1248) (1 samples, 0.30%)</title><rect x="55.3571%" y="324" width="0.2976%" height="15" fill="rgb(233,0,4)"/><text x="55.6071%" y="334.50"></text></g><g><title>glob (glob.py:21) (1 samples, 0.30%)</title><rect x="55.3571%" y="340" width="0.2976%" height="15" fill="rgb(235,30,7)"/><text x="55.6071%" y="350.50"></text></g><g><title>_iglob (glob.py:74) (1 samples, 0.30%)</title><rect x="55.3571%" y="356" width="0.2976%" height="15" fill="rgb(250,79,13)"/><text x="55.6071%" y="366.50"></text></g><g><title>_glob1 (glob.py:82) (1 samples, 0.30%)</title><rect x="55.3571%" y="372" width="0.2976%" height="15" fill="rgb(211,146,34)"/><text x="55.6071%" y="382.50"></text></g><g><title>sensors_temperatures (psutil/_pslinux.py:1252) (1 samples, 0.30%)</title><rect x="55.6548%" y="324" width="0.2976%" height="15" fill="rgb(228,22,38)"/><text x="55.9048%" y="334.50"></text></g><g><title>glob (glob.py:21) (1 samples, 0.30%)</title><rect x="55.6548%" y="340" width="0.2976%" height="15" fill="rgb(235,168,5)"/><text x="55.9048%" y="350.50"></text></g><g><title>_iglob (glob.py:74) (1 samples, 0.30%)</title><rect x="55.6548%" y="356" width="0.2976%" height="15" fill="rgb(221,155,16)"/><text x="55.9048%" y="366.50"></text></g><g><title>_glob1 (glob.py:85) (1 samples, 0.30%)</title><rect x="55.6548%" y="372" width="0.2976%" height="15" fill="rgb(215,215,53)"/><text x="55.9048%" y="382.50"></text></g><g><title>filter (fnmatch.py:56) (1 samples, 0.30%)</title><rect x="55.6548%" y="388" width="0.2976%" height="15" fill="rgb(223,4,10)"/><text x="55.9048%" y="398.50"></text></g><g><title>sensors_temperatures (psutil/_pslinux.py:1270) (2 samples, 0.60%)</title><rect x="55.9524%" y="324" width="0.5952%" height="15" fill="rgb(234,103,6)"/><text x="56.2024%" y="334.50"></text></g><g><title>cat (psutil/_pslinux.py:293) (2 samples, 0.60%)</title><rect x="55.9524%" y="340" width="0.5952%" height="15" fill="rgb(227,97,0)"/><text x="56.2024%" y="350.50"></text></g><g><title>sensors_temperatures (psutil/_pslinux.py:1272) (2 samples, 0.60%)</title><rect x="56.5476%" y="324" width="0.5952%" height="15" fill="rgb(234,150,53)"/><text x="56.7976%" y="334.50"></text></g><g><title>cat (psutil/_pslinux.py:292) (2 samples, 0.60%)</title><rect x="56.5476%" y="340" width="0.5952%" height="15" fill="rgb(228,201,54)"/><text x="56.7976%" y="350.50"></text></g><g><title>open_text (psutil/_common.py:725) (1 samples, 0.30%)</title><rect x="56.8452%" y="356" width="0.2976%" height="15" fill="rgb(222,22,37)"/><text x="57.0952%" y="366.50"></text></g><g><title>__update__ (glances/plugins/glances_sensors.py:282) (8 samples, 2.38%)</title><rect x="55.3571%" y="276" width="2.3810%" height="15" fill="rgb(237,53,32)"/><text x="55.6071%" y="286.50">__..</text></g><g><title>build_sensors_list (glances/plugins/glances_sensors.py:299) (8 samples, 2.38%)</title><rect x="55.3571%" y="292" width="2.3810%" height="15" fill="rgb(233,25,53)"/><text x="55.6071%" y="302.50">bu..</text></g><g><title>sensors_temperatures (psutil/__init__.py:2240) (8 samples, 2.38%)</title><rect x="55.3571%" y="308" width="2.3810%" height="15" fill="rgb(210,40,34)"/><text x="55.6071%" y="318.50">se..</text></g><g><title>sensors_temperatures (psutil/_pslinux.py:1284) (2 samples, 0.60%)</title><rect x="57.1429%" y="324" width="0.5952%" height="15" fill="rgb(241,220,44)"/><text x="57.3929%" y="334.50"></text></g><g><title>cat (psutil/_pslinux.py:292) (2 samples, 0.60%)</title><rect x="57.1429%" y="340" width="0.5952%" height="15" fill="rgb(235,28,35)"/><text x="57.3929%" y="350.50"></text></g><g><title>open_binary (psutil/_common.py:711) (2 samples, 0.60%)</title><rect x="57.1429%" y="356" width="0.5952%" height="15" fill="rgb(210,56,17)"/><text x="57.3929%" y="366.50"></text></g><g><title>update (glances/plugins/glances_sensors.py:102) (9 samples, 2.68%)</title><rect x="55.3571%" y="244" width="2.6786%" height="15" fill="rgb(224,130,29)"/><text x="55.6071%" y="254.50">up..</text></g><g><title>get (glances/plugins/glances_sensors.py:324) (9 samples, 2.68%)</title><rect x="55.3571%" y="260" width="2.6786%" height="15" fill="rgb(235,212,8)"/><text x="55.6071%" y="270.50">ge..</text></g><g><title>__update__ (glances/plugins/glances_sensors.py:285) (1 samples, 0.30%)</title><rect x="57.7381%" y="276" width="0.2976%" height="15" fill="rgb(223,33,50)"/><text x="57.9881%" y="286.50"></text></g><g><title>build_sensors_list (glances/plugins/glances_sensors.py:302) (1 samples, 0.30%)</title><rect x="57.7381%" y="292" width="0.2976%" height="15" fill="rgb(219,149,13)"/><text x="57.9881%" y="302.50"></text></g><g><title>sensors_fans (psutil/__init__.py:2270) (1 samples, 0.30%)</title><rect x="57.7381%" y="308" width="0.2976%" height="15" fill="rgb(250,156,29)"/><text x="57.9881%" y="318.50"></text></g><g><title>sensors_fans (psutil/_pslinux.py:1362) (1 samples, 0.30%)</title><rect x="57.7381%" y="324" width="0.2976%" height="15" fill="rgb(216,193,19)"/><text x="57.9881%" y="334.50"></text></g><g><title>glob (glob.py:21) (1 samples, 0.30%)</title><rect x="57.7381%" y="340" width="0.2976%" height="15" fill="rgb(216,135,14)"/><text x="57.9881%" y="350.50"></text></g><g><title>_iglob (glob.py:74) (1 samples, 0.30%)</title><rect x="57.7381%" y="356" width="0.2976%" height="15" fill="rgb(241,47,5)"/><text x="57.9881%" y="366.50"></text></g><g><title>_glob1 (glob.py:82) (1 samples, 0.30%)</title><rect x="57.7381%" y="372" width="0.2976%" height="15" fill="rgb(233,42,35)"/><text x="57.9881%" y="382.50"></text></g><g><title>_iterdir (glob.py:124) (1 samples, 0.30%)</title><rect x="57.7381%" y="388" width="0.2976%" height="15" fill="rgb(231,13,6)"/><text x="57.9881%" y="398.50"></text></g><g><title>sensors_temperatures (psutil/_pslinux.py:1248) (1 samples, 0.30%)</title><rect x="58.0357%" y="324" width="0.2976%" height="15" fill="rgb(207,181,40)"/><text x="58.2857%" y="334.50"></text></g><g><title>glob (glob.py:21) (1 samples, 0.30%)</title><rect x="58.0357%" y="340" width="0.2976%" height="15" fill="rgb(254,173,49)"/><text x="58.2857%" y="350.50"></text></g><g><title>_iglob (glob.py:74) (1 samples, 0.30%)</title><rect x="58.0357%" y="356" width="0.2976%" height="15" fill="rgb(221,1,38)"/><text x="58.2857%" y="366.50"></text></g><g><title>_glob1 (glob.py:82) (1 samples, 0.30%)</title><rect x="58.0357%" y="372" width="0.2976%" height="15" fill="rgb(206,124,46)"/><text x="58.2857%" y="382.50"></text></g><g><title>_iterdir (glob.py:124) (1 samples, 0.30%)</title><rect x="58.0357%" y="388" width="0.2976%" height="15" fill="rgb(249,21,11)"/><text x="58.2857%" y="398.50"></text></g><g><title>sensors_temperatures (psutil/_pslinux.py:1270) (2 samples, 0.60%)</title><rect x="58.3333%" y="324" width="0.5952%" height="15" fill="rgb(222,201,40)"/><text x="58.5833%" y="334.50"></text></g><g><title>cat (psutil/_pslinux.py:293) (1 samples, 0.30%)</title><rect x="58.6310%" y="340" width="0.2976%" height="15" fill="rgb(235,61,29)"/><text x="58.8810%" y="350.50"></text></g><g><title>cat (psutil/_pslinux.py:292) (3 samples, 0.89%)</title><rect x="58.9286%" y="340" width="0.8929%" height="15" fill="rgb(219,207,3)"/><text x="59.1786%" y="350.50"></text></g><g><title>open_text (psutil/_common.py:725) (3 samples, 0.89%)</title><rect x="58.9286%" y="356" width="0.8929%" height="15" fill="rgb(222,56,46)"/><text x="59.1786%" y="366.50"></text></g><g><title>sensors_temperatures (psutil/_pslinux.py:1272) (5 samples, 1.49%)</title><rect x="58.9286%" y="324" width="1.4881%" height="15" fill="rgb(239,76,54)"/><text x="59.1786%" y="334.50"></text></g><g><title>cat (psutil/_pslinux.py:293) (2 samples, 0.60%)</title><rect x="59.8214%" y="340" width="0.5952%" height="15" fill="rgb(231,124,27)"/><text x="60.0714%" y="350.50"></text></g><g><title>decode (codecs.py:321) (1 samples, 0.30%)</title><rect x="60.1190%" y="356" width="0.2976%" height="15" fill="rgb(249,195,6)"/><text x="60.3690%" y="366.50"></text></g><g><title>sensors_temperatures (psutil/_pslinux.py:1284) (1 samples, 0.30%)</title><rect x="60.4167%" y="324" width="0.2976%" height="15" fill="rgb(237,174,47)"/><text x="60.6667%" y="334.50"></text></g><g><title>cat (psutil/_pslinux.py:293) (1 samples, 0.30%)</title><rect x="60.4167%" y="340" width="0.2976%" height="15" fill="rgb(206,201,31)"/><text x="60.6667%" y="350.50"></text></g><g><title>wrapper (glances/plugins/glances_plugin.py:1045) (203 samples, 60.42%)</title><rect x="0.5952%" y="228" width="60.4167%" height="15" fill="rgb(231,57,52)"/><text x="0.8452%" y="238.50">wrapper (glances/plugins/glances_plugin.py:1045)</text></g><g><title>update (glances/plugins/glances_sensors.py:93) (10 samples, 2.98%)</title><rect x="58.0357%" y="244" width="2.9762%" height="15" fill="rgb(248,177,22)"/><text x="58.2857%" y="254.50">upd..</text></g><g><title>get (glances/plugins/glances_sensors.py:324) (10 samples, 2.98%)</title><rect x="58.0357%" y="260" width="2.9762%" height="15" fill="rgb(215,211,37)"/><text x="58.2857%" y="270.50">get..</text></g><g><title>__update__ (glances/plugins/glances_sensors.py:282) (10 samples, 2.98%)</title><rect x="58.0357%" y="276" width="2.9762%" height="15" fill="rgb(241,128,51)"/><text x="58.2857%" y="286.50">__u..</text></g><g><title>build_sensors_list (glances/plugins/glances_sensors.py:299) (10 samples, 2.98%)</title><rect x="58.0357%" y="292" width="2.9762%" height="15" fill="rgb(227,165,31)"/><text x="58.2857%" y="302.50">bui..</text></g><g><title>sensors_temperatures (psutil/__init__.py:2240) (10 samples, 2.98%)</title><rect x="58.0357%" y="308" width="2.9762%" height="15" fill="rgb(228,167,24)"/><text x="58.2857%" y="318.50">sen..</text></g><g><title>sensors_temperatures (psutil/_pslinux.py:1286) (1 samples, 0.30%)</title><rect x="60.7143%" y="324" width="0.2976%" height="15" fill="rgb(228,143,12)"/><text x="60.9643%" y="334.50"></text></g><g><title>cat (psutil/_pslinux.py:293) (1 samples, 0.30%)</title><rect x="60.7143%" y="340" width="0.2976%" height="15" fill="rgb(249,149,8)"/><text x="60.9643%" y="350.50"></text></g><g><title>wrapper (glances/plugins/glances_plugin.py:1046) (1 samples, 0.30%)</title><rect x="61.0119%" y="228" width="0.2976%" height="15" fill="rgb(243,35,44)"/><text x="61.2619%" y="238.50"></text></g><g><title>get (glances/timer.py:83) (1 samples, 0.30%)</title><rect x="61.0119%" y="244" width="0.2976%" height="15" fill="rgb(246,89,9)"/><text x="61.2619%" y="254.50"></text></g><g><title>wrapper (glances/plugins/glances_plugin.py:1030) (210 samples, 62.50%)</title><rect x="0.5952%" y="212" width="62.5000%" height="15" fill="rgb(233,213,13)"/><text x="0.8452%" y="222.50">wrapper (glances/plugins/glances_plugin.py:1030)</text></g><g><title>wrapper (glances/plugins/glances_plugin.py:1047) (6 samples, 1.79%)</title><rect x="61.3095%" y="228" width="1.7857%" height="15" fill="rgb(233,141,41)"/><text x="61.5595%" y="238.50">w..</text></g><g><title>wrapper (glances/plugins/glances_plugin.py:1032) (1 samples, 0.30%)</title><rect x="63.0952%" y="212" width="0.2976%" height="15" fill="rgb(239,167,4)"/><text x="63.3452%" y="222.50"></text></g><g><title>get_refresh (glances/plugins/glances_plugin.py:596) (1 samples, 0.30%)</title><rect x="63.0952%" y="228" width="0.2976%" height="15" fill="rgb(209,217,16)"/><text x="63.3452%" y="238.50"></text></g><g><title>get_limits (glances/plugins/glances_plugin.py:614) (1 samples, 0.30%)</title><rect x="63.0952%" y="244" width="0.2976%" height="15" fill="rgb(219,88,35)"/><text x="63.3452%" y="254.50"></text></g><g><title>cpu_count_physical (psutil/_pslinux.py:670) (1 samples, 0.30%)</title><rect x="63.3929%" y="260" width="0.2976%" height="15" fill="rgb(220,193,23)"/><text x="63.6429%" y="270.50"></text></g><g><title>glob (glob.py:21) (1 samples, 0.30%)</title><rect x="63.3929%" y="276" width="0.2976%" height="15" fill="rgb(230,90,52)"/><text x="63.6429%" y="286.50"></text></g><g><title>_iglob (glob.py:74) (1 samples, 0.30%)</title><rect x="63.3929%" y="292" width="0.2976%" height="15" fill="rgb(252,106,19)"/><text x="63.6429%" y="302.50"></text></g><g><title>_glob0 (glob.py:94) (1 samples, 0.30%)</title><rect x="63.3929%" y="308" width="0.2976%" height="15" fill="rgb(206,74,20)"/><text x="63.6429%" y="318.50"></text></g><g><title>lexists (posixpath.py:177) (1 samples, 0.30%)</title><rect x="63.3929%" y="324" width="0.2976%" height="15" fill="rgb(230,138,44)"/><text x="63.6429%" y="334.50"></text></g><g><title>update (glances/plugins/glances_core.py:63) (2 samples, 0.60%)</title><rect x="63.3929%" y="228" width="0.5952%" height="15" fill="rgb(235,182,43)"/><text x="63.6429%" y="238.50"></text></g><g><title>cpu_count (psutil/__init__.py:1578) (2 samples, 0.60%)</title><rect x="63.3929%" y="244" width="0.5952%" height="15" fill="rgb(242,16,51)"/><text x="63.6429%" y="254.50"></text></g><g><title>cpu_count_physical (psutil/_pslinux.py:671) (1 samples, 0.30%)</title><rect x="63.6905%" y="260" width="0.2976%" height="15" fill="rgb(248,9,4)"/><text x="63.9405%" y="270.50"></text></g><g><title>open_binary (psutil/_common.py:711) (1 samples, 0.30%)</title><rect x="63.6905%" y="276" width="0.2976%" height="15" fill="rgb(210,31,22)"/><text x="63.9405%" y="286.50"></text></g><g><title>net_if_stats (psutil/_pslinux.py:1072) (1 samples, 0.30%)</title><rect x="63.9881%" y="260" width="0.2976%" height="15" fill="rgb(239,54,39)"/><text x="64.2381%" y="270.50"></text></g><g><title>net_io_counters (psutil/_pslinux.py:1034) (1 samples, 0.30%)</title><rect x="63.9881%" y="276" width="0.2976%" height="15" fill="rgb(230,99,41)"/><text x="64.2381%" y="286.50"></text></g><g><title>open_text (psutil/_common.py:725) (1 samples, 0.30%)</title><rect x="63.9881%" y="292" width="0.2976%" height="15" fill="rgb(253,106,12)"/><text x="64.2381%" y="302.50"></text></g><g><title>net_if_stats (psutil/_pslinux.py:1076) (1 samples, 0.30%)</title><rect x="64.2857%" y="260" width="0.2976%" height="15" fill="rgb(213,46,41)"/><text x="64.5357%" y="270.50"></text></g><g><title>update (glances/stats.py:230) (217 samples, 64.58%)</title><rect x="0.2976%" y="196" width="64.5833%" height="15" fill="rgb(215,133,35)"/><text x="0.5476%" y="206.50">update (glances/stats.py:230)</text></g><g><title>wrapper (glances/plugins/glances_plugin.py:1045) (5 samples, 1.49%)</title><rect x="63.3929%" y="212" width="1.4881%" height="15" fill="rgb(213,28,5)"/><text x="63.6429%" y="222.50"></text></g><g><title>update (glances/plugins/glances_network.py:104) (3 samples, 0.89%)</title><rect x="63.9881%" y="228" width="0.8929%" height="15" fill="rgb(215,77,49)"/><text x="64.2381%" y="238.50"></text></g><g><title>net_if_stats (psutil/__init__.py:2216) (3 samples, 0.89%)</title><rect x="63.9881%" y="244" width="0.8929%" height="15" fill="rgb(248,100,22)"/><text x="64.2381%" y="254.50"></text></g><g><title>net_if_stats (psutil/_pslinux.py:1078) (1 samples, 0.30%)</title><rect x="64.5833%" y="260" width="0.2976%" height="15" fill="rgb(208,67,9)"/><text x="64.8333%" y="270.50"></text></g><g><title>update_stats_history (glances/plugins/glances_plugin.py:193) (1 samples, 0.30%)</title><rect x="64.8810%" y="212" width="0.2976%" height="15" fill="rgb(219,133,21)"/><text x="65.1310%" y="222.50"></text></g><g><title>update_stats_history (glances/plugins/glances_plugin.py:198) (1 samples, 0.30%)</title><rect x="65.1786%" y="212" width="0.2976%" height="15" fill="rgb(246,46,29)"/><text x="65.4286%" y="222.50"></text></g><g><title>update_stats_history (glances/plugins/glances_plugin.py:202) (1 samples, 0.30%)</title><rect x="65.4762%" y="212" width="0.2976%" height="15" fill="rgb(246,185,52)"/><text x="65.7262%" y="222.50"></text></g><g><title>update (glances/stats.py:232) (4 samples, 1.19%)</title><rect x="64.8810%" y="196" width="1.1905%" height="15" fill="rgb(252,136,11)"/><text x="65.1310%" y="206.50"></text></g><g><title>update_stats_history (glances/plugins/glances_plugin.py:206) (1 samples, 0.30%)</title><rect x="65.7738%" y="212" width="0.2976%" height="15" fill="rgb(219,138,53)"/><text x="66.0238%" y="222.50"></text></g><g><title>add (glances/history.py:45) (1 samples, 0.30%)</title><rect x="65.7738%" y="228" width="0.2976%" height="15" fill="rgb(211,51,23)"/><text x="66.0238%" y="238.50"></text></g><g><title>value (glances/attribute.py:84) (1 samples, 0.30%)</title><rect x="65.7738%" y="244" width="0.2976%" height="15" fill="rgb(247,221,28)"/><text x="66.0238%" y="254.50"></text></g><g><title>update_views (glances/plugins/glances_diskio.py:160) (1 samples, 0.30%)</title><rect x="66.0714%" y="212" width="0.2976%" height="15" fill="rgb(251,222,45)"/><text x="66.3214%" y="222.50"></text></g><g><title>update_views (glances/plugins/glances_plugin.py:503) (1 samples, 0.30%)</title><rect x="66.0714%" y="228" width="0.2976%" height="15" fill="rgb(217,162,53)"/><text x="66.3214%" y="238.50"></text></g><g><title>update_views (glances/plugins/glances_mem.py:166) (1 samples, 0.30%)</title><rect x="66.3690%" y="212" width="0.2976%" height="15" fill="rgb(229,93,14)"/><text x="66.6190%" y="222.50"></text></g><g><title>update_views (glances/plugins/glances_plugin.py:516) (1 samples, 0.30%)</title><rect x="66.3690%" y="228" width="0.2976%" height="15" fill="rgb(209,67,49)"/><text x="66.6190%" y="238.50"></text></g><g><title>update_views (glances/plugins/glances_network.py:235) (1 samples, 0.30%)</title><rect x="66.6667%" y="212" width="0.2976%" height="15" fill="rgb(213,87,29)"/><text x="66.9167%" y="222.50"></text></g><g><title>update_views (glances/plugins/glances_plugin.py:503) (1 samples, 0.30%)</title><rect x="66.6667%" y="228" width="0.2976%" height="15" fill="rgb(205,151,52)"/><text x="66.9167%" y="238.50"></text></g><g><title>update_views (glances/plugins/glances_network.py:242) (1 samples, 0.30%)</title><rect x="66.9643%" y="212" width="0.2976%" height="15" fill="rgb(253,215,39)"/><text x="67.2143%" y="222.50"></text></g><g><title>get_raw (glances/plugins/glances_plugin.py:382) (1 samples, 0.30%)</title><rect x="66.9643%" y="228" width="0.2976%" height="15" fill="rgb(221,220,41)"/><text x="67.2143%" y="238.50"></text></g><g><title>update_views (glances/plugins/glances_network.py:249) (1 samples, 0.30%)</title><rect x="67.2619%" y="212" width="0.2976%" height="15" fill="rgb(218,133,21)"/><text x="67.5119%" y="222.50"></text></g><g><title>update_views (glances/plugins/glances_plugin.py:497) (3 samples, 0.89%)</title><rect x="67.5595%" y="212" width="0.8929%" height="15" fill="rgb(221,193,43)"/><text x="67.8095%" y="222.50"></text></g><g><title>update_views (glances/plugins/glances_plugin.py:498) (7 samples, 2.08%)</title><rect x="68.4524%" y="212" width="2.0833%" height="15" fill="rgb(240,128,52)"/><text x="68.7024%" y="222.50">u..</text></g><g><title>update_views (glances/plugins/glances_plugin.py:503) (12 samples, 3.57%)</title><rect x="70.5357%" y="212" width="3.5714%" height="15" fill="rgb(253,114,12)"/><text x="70.7857%" y="222.50">upda..</text></g><g><title>get_key (glances/plugins/glances_processlist.py:131) (1 samples, 0.30%)</title><rect x="73.8095%" y="228" width="0.2976%" height="15" fill="rgb(215,223,47)"/><text x="74.0595%" y="238.50"></text></g><g><title>update_views (glances/plugins/glances_plugin.py:504) (3 samples, 0.89%)</title><rect x="74.1071%" y="212" width="0.8929%" height="15" fill="rgb(248,225,23)"/><text x="74.3571%" y="222.50"></text></g><g><title>get_key (glances/plugins/glances_processlist.py:131) (2 samples, 0.60%)</title><rect x="74.4048%" y="228" width="0.5952%" height="15" fill="rgb(250,108,0)"/><text x="74.6548%" y="238.50"></text></g><g><title>update_views (glances/plugins/glances_plugin.py:516) (4 samples, 1.19%)</title><rect x="75.0000%" y="212" width="1.1905%" height="15" fill="rgb(228,208,7)"/><text x="75.2500%" y="222.50"></text></g><g><title>__serve_once (glances/standalone.py:135) (257 samples, 76.49%)</title><rect x="0.0000%" y="180" width="76.4881%" height="15" fill="rgb(244,45,10)"/><text x="0.2500%" y="190.50">__serve_once (glances/standalone.py:135)</text></g><g><title>update (glances/stats.py:234) (35 samples, 10.42%)</title><rect x="66.0714%" y="196" width="10.4167%" height="15" fill="rgb(207,125,25)"/><text x="66.3214%" y="206.50">update (glances..</text></g><g><title>update_views (glances/plugins/glances_quicklook.py:99) (1 samples, 0.30%)</title><rect x="76.1905%" y="212" width="0.2976%" height="15" fill="rgb(210,195,18)"/><text x="76.4405%" y="222.50"></text></g><g><title>update_views (glances/plugins/glances_plugin.py:513) (1 samples, 0.30%)</title><rect x="76.1905%" y="228" width="0.2976%" height="15" fill="rgb(249,80,12)"/><text x="76.4405%" y="238.50"></text></g><g><title>__get_stat_display (glances/outputs/glances_curses.py:535) (1 samples, 0.30%)</title><rect x="76.4881%" y="244" width="0.2976%" height="15" fill="rgb(221,65,9)"/><text x="76.7381%" y="254.50"></text></g><g><title>getPluginsList (glances/stats.py:199) (1 samples, 0.30%)</title><rect x="76.4881%" y="260" width="0.2976%" height="15" fill="rgb(235,49,36)"/><text x="76.7381%" y="270.50"></text></g><g><title>__get_stat_display (glances/outputs/glances_curses.py:546) (1 samples, 0.30%)</title><rect x="76.7857%" y="244" width="0.2976%" height="15" fill="rgb(225,32,20)"/><text x="77.0357%" y="254.50"></text></g><g><title>msg_curse (glances/plugins/glances_cpu.py:234) (1 samples, 0.30%)</title><rect x="77.0833%" y="276" width="0.2976%" height="15" fill="rgb(215,141,46)"/><text x="77.3333%" y="286.50"></text></g><g><title>get_trend (glances/plugins/glances_plugin.py:286) (1 samples, 0.30%)</title><rect x="77.0833%" y="292" width="0.2976%" height="15" fill="rgb(250,160,47)"/><text x="77.3333%" y="302.50"></text></g><g><title>mean (statistics.py:316) (1 samples, 0.30%)</title><rect x="77.0833%" y="308" width="0.2976%" height="15" fill="rgb(216,222,40)"/><text x="77.3333%" y="318.50"></text></g><g><title>_sum (statistics.py:166) (1 samples, 0.30%)</title><rect x="77.0833%" y="324" width="0.2976%" height="15" fill="rgb(234,217,39)"/><text x="77.3333%" y="334.50"></text></g><g><title>_exact_ratio (statistics.py:232) (1 samples, 0.30%)</title><rect x="77.0833%" y="340" width="0.2976%" height="15" fill="rgb(207,178,40)"/><text x="77.3333%" y="350.50"></text></g><g><title>msg_curse (glances/plugins/glances_cpu.py:235) (2 samples, 0.60%)</title><rect x="77.3810%" y="276" width="0.5952%" height="15" fill="rgb(221,136,13)"/><text x="77.6310%" y="286.50"></text></g><g><title>get_trend (glances/plugins/glances_plugin.py:286) (2 samples, 0.60%)</title><rect x="77.3810%" y="292" width="0.5952%" height="15" fill="rgb(249,199,10)"/><text x="77.6310%" y="302.50"></text></g><g><title>mean (statistics.py:316) (2 samples, 0.60%)</title><rect x="77.3810%" y="308" width="0.5952%" height="15" fill="rgb(249,222,13)"/><text x="77.6310%" y="318.50"></text></g><g><title>_sum (statistics.py:177) (2 samples, 0.60%)</title><rect x="77.3810%" y="324" width="0.5952%" height="15" fill="rgb(244,185,38)"/><text x="77.6310%" y="334.50"></text></g><g><title>display (glances/outputs/glances_curses.py:577) (6 samples, 1.79%)</title><rect x="76.4881%" y="228" width="1.7857%" height="15" fill="rgb(236,202,9)"/><text x="76.7381%" y="238.50">d..</text></g><g><title>__get_stat_display (glances/outputs/glances_curses.py:550) (4 samples, 1.19%)</title><rect x="77.0833%" y="244" width="1.1905%" height="15" fill="rgb(250,229,37)"/><text x="77.3333%" y="254.50"></text></g><g><title>get_stats_display (glances/plugins/glances_plugin.py:899) (4 samples, 1.19%)</title><rect x="77.0833%" y="260" width="1.1905%" height="15" fill="rgb(206,174,23)"/><text x="77.3333%" y="270.50"></text></g><g><title>msg_curse (glances/plugins/glances_mem.py:212) (1 samples, 0.30%)</title><rect x="77.9762%" y="276" width="0.2976%" height="15" fill="rgb(211,33,43)"/><text x="78.2262%" y="286.50"></text></g><g><title>auto_unit (glances/plugins/glances_plugin.py:990) (1 samples, 0.30%)</title><rect x="77.9762%" y="292" width="0.2976%" height="15" fill="rgb(245,58,50)"/><text x="78.2262%" y="302.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:376) (1 samples, 0.30%)</title><rect x="78.5714%" y="276" width="0.2976%" height="15" fill="rgb(244,68,36)"/><text x="78.8214%" y="286.50"></text></g><g><title>curse_new_line (glances/plugins/glances_plugin.py:940) (1 samples, 0.30%)</title><rect x="78.5714%" y="292" width="0.2976%" height="15" fill="rgb(232,229,15)"/><text x="78.8214%" y="302.50"></text></g><g><title>_get_process_curses_cpu (glances/plugins/glances_processlist.py:186) (1 samples, 0.30%)</title><rect x="79.1667%" y="292" width="0.2976%" height="15" fill="rgb(254,30,23)"/><text x="79.4167%" y="302.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:384) (4 samples, 1.19%)</title><rect x="78.8690%" y="276" width="1.1905%" height="15" fill="rgb(235,160,14)"/><text x="79.1190%" y="286.50"></text></g><g><title>_get_process_curses_cpu (glances/plugins/glances_processlist.py:192) (2 samples, 0.60%)</title><rect x="79.4643%" y="292" width="0.5952%" height="15" fill="rgb(212,155,44)"/><text x="79.7143%" y="302.50"></text></g><g><title>curse_add_line (glances/plugins/glances_plugin.py:932) (2 samples, 0.60%)</title><rect x="79.4643%" y="308" width="0.5952%" height="15" fill="rgb(226,2,50)"/><text x="79.7143%" y="318.50"></text></g><g><title>_get_process_curses_mem (glances/plugins/glances_processlist.py:201) (1 samples, 0.30%)</title><rect x="80.0595%" y="292" width="0.2976%" height="15" fill="rgb(234,177,6)"/><text x="80.3095%" y="302.50"></text></g><g><title>get_alert (glances/plugins/glances_plugin.py:675) (1 samples, 0.30%)</title><rect x="80.6548%" y="308" width="0.2976%" height="15" fill="rgb(217,24,9)"/><text x="80.9048%" y="318.50"></text></g><g><title>get_stat_name (glances/plugins/glances_plugin.py:628) (1 samples, 0.30%)</title><rect x="80.6548%" y="324" width="0.2976%" height="15" fill="rgb(220,13,46)"/><text x="80.9048%" y="334.50"></text></g><g><title>get_alert (glances/plugins/glances_plugin.py:683) (1 samples, 0.30%)</title><rect x="80.9524%" y="308" width="0.2976%" height="15" fill="rgb(239,221,27)"/><text x="81.2024%" y="318.50"></text></g><g><title>get_alert (glances/plugins/glances_plugin.py:694) (1 samples, 0.30%)</title><rect x="81.2500%" y="308" width="0.2976%" height="15" fill="rgb(222,198,25)"/><text x="81.5000%" y="318.50"></text></g><g><title>get_limit_log (glances/plugins/glances_plugin.py:807) (1 samples, 0.30%)</title><rect x="81.2500%" y="324" width="0.2976%" height="15" fill="rgb(211,99,13)"/><text x="81.5000%" y="334.50"></text></g><g><title>get_alert (glances/plugins/glances_plugin.py:702) (1 samples, 0.30%)</title><rect x="81.5476%" y="308" width="0.2976%" height="15" fill="rgb(232,111,31)"/><text x="81.7976%" y="318.50"></text></g><g><title>manage_threshold (glances/plugins/glances_plugin.py:714) (1 samples, 0.30%)</title><rect x="81.5476%" y="324" width="0.2976%" height="15" fill="rgb(245,82,37)"/><text x="81.7976%" y="334.50"></text></g><g><title>add (glances/thresholds.py:58) (1 samples, 0.30%)</title><rect x="81.5476%" y="340" width="0.2976%" height="15" fill="rgb(227,149,46)"/><text x="81.7976%" y="350.50"></text></g><g><title>get_limit_action (glances/plugins/glances_plugin.py:791) (1 samples, 0.30%)</title><rect x="81.8452%" y="340" width="0.2976%" height="15" fill="rgb(218,36,50)"/><text x="82.0952%" y="350.50"></text></g><g><title>_get_process_curses_mem (glances/plugins/glances_processlist.py:203) (7 samples, 2.08%)</title><rect x="80.3571%" y="292" width="2.0833%" height="15" fill="rgb(226,80,48)"/><text x="80.6071%" y="302.50">_..</text></g><g><title>get_alert (glances/plugins/glances_plugin.py:705) (2 samples, 0.60%)</title><rect x="81.8452%" y="308" width="0.5952%" height="15" fill="rgb(238,224,15)"/><text x="82.0952%" y="318.50"></text></g><g><title>manage_action (glances/plugins/glances_plugin.py:724) (2 samples, 0.60%)</title><rect x="81.8452%" y="324" width="0.5952%" height="15" fill="rgb(241,136,10)"/><text x="82.0952%" y="334.50"></text></g><g><title>get_limit_action (glances/plugins/glances_plugin.py:792) (1 samples, 0.30%)</title><rect x="82.1429%" y="340" width="0.2976%" height="15" fill="rgb(208,32,45)"/><text x="82.3929%" y="350.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:387) (9 samples, 2.68%)</title><rect x="80.0595%" y="276" width="2.6786%" height="15" fill="rgb(207,135,9)"/><text x="80.3095%" y="286.50">ge..</text></g><g><title>_get_process_curses_mem (glances/plugins/glances_processlist.py:208) (1 samples, 0.30%)</title><rect x="82.4405%" y="292" width="0.2976%" height="15" fill="rgb(206,86,44)"/><text x="82.6905%" y="302.50"></text></g><g><title>_get_process_curses_vms (glances/plugins/glances_processlist.py:217) (1 samples, 0.30%)</title><rect x="82.7381%" y="292" width="0.2976%" height="15" fill="rgb(245,177,15)"/><text x="82.9881%" y="302.50"></text></g><g><title>key_exist_value_not_none_not_v (glances/compat.py:285) (1 samples, 0.30%)</title><rect x="82.7381%" y="308" width="0.2976%" height="15" fill="rgb(206,64,50)"/><text x="82.9881%" y="318.50"></text></g><g><title>auto_unit (glances/plugins/glances_plugin.py:1003) (4 samples, 1.19%)</title><rect x="83.0357%" y="308" width="1.1905%" height="15" fill="rgb(234,36,40)"/><text x="83.2857%" y="318.50"></text></g><g><title>auto_unit (glances/plugins/glances_plugin.py:1005) (1 samples, 0.30%)</title><rect x="84.2262%" y="308" width="0.2976%" height="15" fill="rgb(213,64,8)"/><text x="84.4762%" y="318.50"></text></g><g><title>auto_unit (glances/plugins/glances_plugin.py:977) (1 samples, 0.30%)</title><rect x="84.5238%" y="308" width="0.2976%" height="15" fill="rgb(210,75,36)"/><text x="84.7738%" y="318.50"></text></g><g><title>auto_unit (glances/plugins/glances_plugin.py:989) (1 samples, 0.30%)</title><rect x="84.8214%" y="308" width="0.2976%" height="15" fill="rgb(229,88,21)"/><text x="85.0714%" y="318.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:388) (9 samples, 2.68%)</title><rect x="82.7381%" y="276" width="2.6786%" height="15" fill="rgb(252,204,47)"/><text x="82.9881%" y="286.50">ge..</text></g><g><title>_get_process_curses_vms (glances/plugins/glances_processlist.py:219) (8 samples, 2.38%)</title><rect x="83.0357%" y="292" width="2.3810%" height="15" fill="rgb(208,77,27)"/><text x="83.2857%" y="302.50">_g..</text></g><g><title>auto_unit (glances/plugins/glances_plugin.py:990) (1 samples, 0.30%)</title><rect x="85.1190%" y="308" width="0.2976%" height="15" fill="rgb(221,76,26)"/><text x="85.3690%" y="318.50"></text></g><g><title>_get_process_curses_rss (glances/plugins/glances_processlist.py:229) (1 samples, 0.30%)</title><rect x="85.7143%" y="292" width="0.2976%" height="15" fill="rgb(225,139,18)"/><text x="85.9643%" y="302.50"></text></g><g><title>key_exist_value_not_none_not_v (glances/compat.py:285) (1 samples, 0.30%)</title><rect x="85.7143%" y="308" width="0.2976%" height="15" fill="rgb(230,137,11)"/><text x="85.9643%" y="318.50"></text></g><g><title>auto_unit (glances/plugins/glances_plugin.py:1003) (1 samples, 0.30%)</title><rect x="86.0119%" y="308" width="0.2976%" height="15" fill="rgb(212,28,1)"/><text x="86.2619%" y="318.50"></text></g><g><title>auto_unit (glances/plugins/glances_plugin.py:989) (1 samples, 0.30%)</title><rect x="86.3095%" y="308" width="0.2976%" height="15" fill="rgb(248,164,17)"/><text x="86.5595%" y="318.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:389) (5 samples, 1.49%)</title><rect x="85.4167%" y="276" width="1.4881%" height="15" fill="rgb(222,171,42)"/><text x="85.6667%" y="286.50"></text></g><g><title>_get_process_curses_rss (glances/plugins/glances_processlist.py:231) (3 samples, 0.89%)</title><rect x="86.0119%" y="292" width="0.8929%" height="15" fill="rgb(243,84,45)"/><text x="86.2619%" y="302.50"></text></g><g><title>auto_unit (glances/plugins/glances_plugin.py:990) (1 samples, 0.30%)</title><rect x="86.6071%" y="308" width="0.2976%" height="15" fill="rgb(252,49,23)"/><text x="86.8571%" y="318.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:392) (1 samples, 0.30%)</title><rect x="86.9048%" y="276" width="0.2976%" height="15" fill="rgb(215,19,7)"/><text x="87.1548%" y="286.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:393) (2 samples, 0.60%)</title><rect x="87.2024%" y="276" width="0.5952%" height="15" fill="rgb(238,81,41)"/><text x="87.4524%" y="286.50"></text></g><g><title>seconds_to_hms (glances/plugins/glances_processlist.py:35) (1 samples, 0.30%)</title><rect x="87.7976%" y="308" width="0.2976%" height="15" fill="rgb(210,199,37)"/><text x="88.0476%" y="318.50"></text></g><g><title>_get_process_curses_time (glances/plugins/glances_processlist.py:266) (3 samples, 0.89%)</title><rect x="87.7976%" y="292" width="0.8929%" height="15" fill="rgb(244,192,49)"/><text x="88.0476%" y="302.50"></text></g><g><title>seconds_to_hms (glances/plugins/glances_processlist.py:40) (2 samples, 0.60%)</title><rect x="88.0952%" y="308" width="0.5952%" height="15" fill="rgb(226,211,11)"/><text x="88.3452%" y="318.50"></text></g><g><title>_get_process_curses_time (glances/plugins/glances_processlist.py:267) (1 samples, 0.30%)</title><rect x="88.6905%" y="292" width="0.2976%" height="15" fill="rgb(236,162,54)"/><text x="88.9405%" y="302.50"></text></g><g><title>_get_process_curses_time (glances/plugins/glances_processlist.py:272) (1 samples, 0.30%)</title><rect x="88.9881%" y="292" width="0.2976%" height="15" fill="rgb(220,229,9)"/><text x="89.2381%" y="302.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:399) (6 samples, 1.79%)</title><rect x="87.7976%" y="276" width="1.7857%" height="15" fill="rgb(250,87,22)"/><text x="88.0476%" y="286.50">g..</text></g><g><title>_get_process_curses_time (glances/plugins/glances_processlist.py:279) (1 samples, 0.30%)</title><rect x="89.2857%" y="292" width="0.2976%" height="15" fill="rgb(239,43,17)"/><text x="89.5357%" y="302.50"></text></g><g><title>curse_add_line (glances/plugins/glances_plugin.py:932) (1 samples, 0.30%)</title><rect x="89.2857%" y="308" width="0.2976%" height="15" fill="rgb(231,177,25)"/><text x="89.5357%" y="318.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:402) (1 samples, 0.30%)</title><rect x="89.5833%" y="276" width="0.2976%" height="15" fill="rgb(219,179,1)"/><text x="89.8333%" y="286.50"></text></g><g><title>_get_process_curses_thread (glances/plugins/glances_processlist.py:290) (1 samples, 0.30%)</title><rect x="89.5833%" y="292" width="0.2976%" height="15" fill="rgb(238,219,53)"/><text x="89.8333%" y="302.50"></text></g><g><title>curse_add_line (glances/plugins/glances_plugin.py:932) (1 samples, 0.30%)</title><rect x="89.5833%" y="308" width="0.2976%" height="15" fill="rgb(232,167,36)"/><text x="89.8333%" y="318.50"></text></g><g><title>_get_process_curses_nice (glances/plugins/glances_processlist.py:303) (1 samples, 0.30%)</title><rect x="89.8810%" y="292" width="0.2976%" height="15" fill="rgb(244,19,51)"/><text x="90.1310%" y="302.50"></text></g><g><title>_get_process_curses_nice (glances/plugins/glances_processlist.py:304) (3 samples, 0.89%)</title><rect x="90.1786%" y="292" width="0.8929%" height="15" fill="rgb(224,6,22)"/><text x="90.4286%" y="302.50"></text></g><g><title>curse_add_line (glances/plugins/glances_plugin.py:932) (2 samples, 0.60%)</title><rect x="90.4762%" y="308" width="0.5952%" height="15" fill="rgb(224,145,5)"/><text x="90.7262%" y="318.50"></text></g><g><title>get_limit (glances/plugins/glances_plugin.py:771) (2 samples, 0.60%)</title><rect x="91.0714%" y="324" width="0.5952%" height="15" fill="rgb(234,130,49)"/><text x="91.3214%" y="334.50"></text></g><g><title>get_nice_alert (glances/plugins/glances_processlist.py:161) (3 samples, 0.89%)</title><rect x="91.0714%" y="308" width="0.8929%" height="15" fill="rgb(254,6,2)"/><text x="91.3214%" y="318.50"></text></g><g><title>get_limit (glances/plugins/glances_plugin.py:772) (1 samples, 0.30%)</title><rect x="91.6667%" y="324" width="0.2976%" height="15" fill="rgb(208,96,46)"/><text x="91.9167%" y="334.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:405) (8 samples, 2.38%)</title><rect x="89.8810%" y="276" width="2.3810%" height="15" fill="rgb(239,3,39)"/><text x="90.1310%" y="286.50">ge..</text></g><g><title>_get_process_curses_nice (glances/plugins/glances_processlist.py:305) (4 samples, 1.19%)</title><rect x="91.0714%" y="292" width="1.1905%" height="15" fill="rgb(233,210,1)"/><text x="91.3214%" y="302.50"></text></g><g><title>get_nice_alert (glances/plugins/glances_processlist.py:166) (1 samples, 0.30%)</title><rect x="91.9643%" y="308" width="0.2976%" height="15" fill="rgb(244,137,37)"/><text x="92.2143%" y="318.50"></text></g><g><title>get_limit (glances/plugins/glances_plugin.py:771) (1 samples, 0.30%)</title><rect x="91.9643%" y="324" width="0.2976%" height="15" fill="rgb(240,136,2)"/><text x="92.2143%" y="334.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:408) (1 samples, 0.30%)</title><rect x="92.2619%" y="276" width="0.2976%" height="15" fill="rgb(239,18,37)"/><text x="92.5119%" y="286.50"></text></g><g><title>_get_process_curses_status (glances/plugins/glances_processlist.py:316) (1 samples, 0.30%)</title><rect x="92.2619%" y="292" width="0.2976%" height="15" fill="rgb(218,185,22)"/><text x="92.5119%" y="302.50"></text></g><g><title>_get_process_curses_io_read (glances/plugins/glances_processlist.py:337) (1 samples, 0.30%)</title><rect x="92.8571%" y="292" width="0.2976%" height="15" fill="rgb(225,218,4)"/><text x="93.1071%" y="302.50"></text></g><g><title>_get_process_curses_io_read (glances/plugins/glances_processlist.py:344) (1 samples, 0.30%)</title><rect x="93.1548%" y="292" width="0.2976%" height="15" fill="rgb(230,182,32)"/><text x="93.4048%" y="302.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:411) (4 samples, 1.19%)</title><rect x="92.5595%" y="276" width="1.1905%" height="15" fill="rgb(242,56,43)"/><text x="92.8095%" y="286.50"></text></g><g><title>_get_process_curses_io_read (glances/plugins/glances_processlist.py:345) (1 samples, 0.30%)</title><rect x="93.4524%" y="292" width="0.2976%" height="15" fill="rgb(233,99,24)"/><text x="93.7024%" y="302.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:417) (1 samples, 0.30%)</title><rect x="93.7500%" y="276" width="0.2976%" height="15" fill="rgb(234,209,42)"/><text x="94.0000%" y="286.50"></text></g><g><title>split (posixpath.py:104) (1 samples, 0.30%)</title><rect x="94.0476%" y="308" width="0.2976%" height="15" fill="rgb(227,7,12)"/><text x="94.2976%" y="318.50"></text></g><g><title>_get_sep (posixpath.py:41) (1 samples, 0.30%)</title><rect x="94.0476%" y="324" width="0.2976%" height="15" fill="rgb(245,203,43)"/><text x="94.2976%" y="334.50"></text></g><g><title>split (posixpath.py:106) (1 samples, 0.30%)</title><rect x="94.3452%" y="308" width="0.2976%" height="15" fill="rgb(238,205,33)"/><text x="94.5952%" y="318.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:424) (3 samples, 0.89%)</title><rect x="94.0476%" y="276" width="0.8929%" height="15" fill="rgb(231,56,7)"/><text x="94.2976%" y="286.50"></text></g><g><title>split_cmdline (glances/plugins/glances_processlist.py:47) (3 samples, 0.89%)</title><rect x="94.0476%" y="292" width="0.8929%" height="15" fill="rgb(244,186,29)"/><text x="94.2976%" y="302.50"></text></g><g><title>split (posixpath.py:108) (1 samples, 0.30%)</title><rect x="94.6429%" y="308" width="0.2976%" height="15" fill="rgb(234,111,31)"/><text x="94.8929%" y="318.50"></text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:428) (2 samples, 0.60%)</title><rect x="94.9405%" y="276" width="0.5952%" height="15" fill="rgb(241,149,10)"/><text x="95.1905%" y="286.50"></text></g><g><title>isdir (genericpath.py:42) (2 samples, 0.60%)</title><rect x="94.9405%" y="292" width="0.5952%" height="15" fill="rgb(249,206,44)"/><text x="95.1905%" y="302.50"></text></g><g><title>display (glances/outputs/glances_curses.py:604) (59 samples, 17.56%)</title><rect x="78.2738%" y="228" width="17.5595%" height="15" fill="rgb(251,153,30)"/><text x="78.5238%" y="238.50">display (glances/outputs/gl..</text></g><g><title>get_stats_display (glances/plugins/glances_plugin.py:899) (59 samples, 17.56%)</title><rect x="78.2738%" y="244" width="17.5595%" height="15" fill="rgb(239,152,38)"/><text x="78.5238%" y="254.50">get_stats_display (glances/..</text></g><g><title>msg_curse (glances/plugins/glances_processlist.py:538) (59 samples, 17.56%)</title><rect x="78.2738%" y="260" width="17.5595%" height="15" fill="rgb(249,139,47)"/><text x="78.5238%" y="270.50">msg_curse (glances/plugins/..</text></g><g><title>get_process_curses_data (glances/plugins/glances_processlist.py:435) (1 samples, 0.30%)</title><rect x="95.5357%" y="276" width="0.2976%" height="15" fill="rgb(244,64,35)"/><text x="95.7857%" y="286.50"></text></g><g><title>display (glances/outputs/glances_curses.py:622) (1 samples, 0.30%)</title><rect x="95.8333%" y="228" width="0.2976%" height="15" fill="rgb(216,46,15)"/><text x="96.0833%" y="238.50"></text></g><g><title>__display_header (glances/outputs/glances_curses.py:701) (1 samples, 0.30%)</title><rect x="95.8333%" y="244" width="0.2976%" height="15" fill="rgb(250,74,19)"/><text x="96.0833%" y="254.50"></text></g><g><title>new_line (glances/outputs/glances_curses.py:514) (1 samples, 0.30%)</title><rect x="95.8333%" y="260" width="0.2976%" height="15" fill="rgb(249,42,33)"/><text x="96.0833%" y="270.50"></text></g><g><title>display (glances/outputs/glances_curses.py:632) (1 samples, 0.30%)</title><rect x="96.1310%" y="228" width="0.2976%" height="15" fill="rgb(242,149,17)"/><text x="96.3810%" y="238.50"></text></g><g><title>__display_left (glances/outputs/glances_curses.py:809) (1 samples, 0.30%)</title><rect x="96.1310%" y="244" width="0.2976%" height="15" fill="rgb(244,29,21)"/><text x="96.3810%" y="254.50"></text></g><g><title>display_plugin (glances/outputs/glances_curses.py:996) (1 samples, 0.30%)</title><rect x="96.1310%" y="260" width="0.2976%" height="15" fill="rgb(220,130,37)"/><text x="96.3810%" y="270.50"></text></g><g><title>update (glances/outputs/glances_curses.py:1077) (70 samples, 20.83%)</title><rect x="76.4881%" y="196" width="20.8333%" height="15" fill="rgb(211,67,2)"/><text x="76.7381%" y="206.50">update (glances/outputs/glances_c..</text></g><g><title>flush (glances/outputs/glances_curses.py:1052) (70 samples, 20.83%)</title><rect x="76.4881%" y="212" width="20.8333%" height="15" fill="rgb(235,68,52)"/><text x="76.7381%" y="222.50">flush (glances/outputs/glances_cu..</text></g><g><title>display (glances/outputs/glances_curses.py:637) (3 samples, 0.89%)</title><rect x="96.4286%" y="228" width="0.8929%" height="15" fill="rgb(246,142,3)"/><text x="96.6786%" y="238.50"></text></g><g><title>__display_right (glances/outputs/glances_curses.py:833) (3 samples, 0.89%)</title><rect x="96.4286%" y="244" width="0.8929%" height="15" fill="rgb(241,25,7)"/><text x="96.6786%" y="254.50"></text></g><g><title>display_plugin (glances/outputs/glances_curses.py:1009) (3 samples, 0.89%)</title><rect x="96.4286%" y="260" width="0.8929%" height="15" fill="rgb(242,119,39)"/><text x="96.6786%" y="270.50"></text></g><g><title>update (glances/outputs/glances_curses.py:1090) (1 samples, 0.30%)</title><rect x="97.3214%" y="196" width="0.2976%" height="15" fill="rgb(241,98,45)"/><text x="97.5714%" y="206.50"></text></g><g><title>finished (glances/timer.py:66) (1 samples, 0.30%)</title><rect x="97.3214%" y="212" width="0.2976%" height="15" fill="rgb(254,28,30)"/><text x="97.5714%" y="222.50"></text></g><g><title>all (336 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(241,142,54)"/><text x="0.2500%" y="62.50"></text></g><g><title>process 2569875:&quot;./venv/bin/python -m glances -C ./conf/glances.conf&quot; (336 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(222,85,15)"/><text x="0.2500%" y="78.50">process 2569875:&quot;./venv/bin/python -m glances -C ./conf/glances.conf&quot;</text></g><g><title>_run_module_as_main (runpy.py:194) (336 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(210,85,47)"/><text x="0.2500%" y="94.50">_run_module_as_main (runpy.py:194)</text></g><g><title>_run_code (runpy.py:87) (336 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(224,206,25)"/><text x="0.2500%" y="110.50">_run_code (runpy.py:87)</text></g><g><title>&lt;module&gt; (glances/__main__.py:29) (336 samples, 100.00%)</title><rect x="0.0000%" y="116" width="100.0000%" height="15" fill="rgb(243,201,19)"/><text x="0.2500%" y="126.50">&lt;module&gt; (glances/__main__.py:29)</text></g><g><title>main (glances/__init__.py:149) (336 samples, 100.00%)</title><rect x="0.0000%" y="132" width="100.0000%" height="15" fill="rgb(236,59,4)"/><text x="0.2500%" y="142.50">main (glances/__init__.py:149)</text></g><g><title>start (glances/__init__.py:118) (336 samples, 100.00%)</title><rect x="0.0000%" y="148" width="100.0000%" height="15" fill="rgb(254,179,45)"/><text x="0.2500%" y="158.50">start (glances/__init__.py:118)</text></g><g><title>serve_forever (glances/standalone.py:168) (336 samples, 100.00%)</title><rect x="0.0000%" y="164" width="100.0000%" height="15" fill="rgb(226,14,10)"/><text x="0.2500%" y="174.50">serve_forever (glances/standalone.py:168)</text></g><g><title>__serve_once (glances/standalone.py:153) (79 samples, 23.51%)</title><rect x="76.4881%" y="180" width="23.5119%" height="15" fill="rgb(244,27,41)"/><text x="76.7381%" y="190.50">__serve_once (glances/standalone.py:1..</text></g><g><title>update (glances/outputs/glances_curses.py:1092) (8 samples, 2.38%)</title><rect x="97.6190%" y="196" width="2.3810%" height="15" fill="rgb(235,35,32)"/><text x="97.8690%" y="206.50">up..</text></g><g><title>__catch_key (glances/outputs/glances_curses.py:346) (8 samples, 2.38%)</title><rect x="97.6190%" y="212" width="2.3810%" height="15" fill="rgb(218,68,31)"/><text x="97.8690%" y="222.50">__..</text></g><g><title>get_key (glances/outputs/glances_curses.py:341) (8 samples, 2.38%)</title><rect x="97.6190%" y="228" width="2.3810%" height="15" fill="rgb(207,120,37)"/><text x="97.8690%" y="238.50">ge..</text></g></svg></svg>